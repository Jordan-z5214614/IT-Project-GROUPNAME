[
    {
        "id": "85d340a4.f1b06",
        "type": "tab",
        "label": "Flow 3",
        "disabled": false,
        "info": ""
    },
    {
        "id": "1aa75b30.1cd1f5",
        "type": "modbus-server",
        "z": "85d340a4.f1b06",
        "name": "Modbus Server",
        "logEnabled": false,
        "hostname": "",
        "serverPort": "502",
        "responseDelay": 100,
        "delayUnit": "ms",
        "coilsBufferSize": 1024,
        "holdingBufferSize": 1024,
        "inputBufferSize": 1024,
        "discreteBufferSize": "1024",
        "showErrors": false,
        "x": 360,
        "y": 120,
        "wires": [
            [
                "bef72bf7.e5de68"
            ],
            [
                "bef72bf7.e5de68"
            ],
            [
                "bef72bf7.e5de68"
            ],
            []
        ]
    },
    {
        "id": "bef72bf7.e5de68",
        "type": "debug",
        "z": "85d340a4.f1b06",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 584,
        "y": 120,
        "wires": []
    },
    {
        "id": "e1128e2.70df67",
        "type": "inject",
        "z": "85d340a4.f1b06",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "x": 171,
        "y": 120,
        "wires": [
            [
                "1aa75b30.1cd1f5"
            ]
        ]
    },
    {
        "id": "4acd6972.b2e7",
        "type": "comment",
        "z": "85d340a4.f1b06",
        "name": "Modbus Slave device",
        "info": "",
        "x": 380,
        "y": 60,
        "wires": []
    },
    {
        "id": "eeba995f.5bc2b",
        "type": "comment",
        "z": "85d340a4.f1b06",
        "name": "Wind Farm Server",
        "info": "",
        "x": 170,
        "y": 60,
        "wires": []
    },
    {
        "id": "4cb28f58.16e3c",
        "type": "function",
        "z": "85d340a4.f1b06",
        "name": "windDirection 1 simulator",
        "func": "//get global variables\nvar windDirection = global.get(\"windDirection\");\nvar counter = global.get(\"counter\");\nvar active = global.get(\"active\");\nvar shutdown = global.get(\"shutdown\");\nvar restart = global.get(\"restart\");\n\n//increment counter\ncounter += 1\n\n//set counter and windDirection\nglobal.set(\"counter\",counter);\nglobal.set(\"windDirection\", windDirection);\n\n//calculate windDirection using sin function\nwindDirection = 10* Math.sin(0.06 *counter) + 24;\n\n//if active is false then send default 0\nif(active === false){\n    windDirection = 0;\n}\n\nif(shutdown === true){\n        windDirection = 0;\n}\n\n//send payload\nmsg.payload = { value: windDirection, \n    'fc': 6,\n    'unitid': 1, \n    'address': 1,\n    'quantity': 1 } \nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 480,
        "wires": [
            [
                "3006fed7.b635d2"
            ]
        ]
    },
    {
        "id": "4dde4d27.33d354",
        "type": "inject",
        "z": "85d340a4.f1b06",
        "name": "",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "2",
        "crontab": "",
        "once": true,
        "onceDelay": "3",
        "x": 150,
        "y": 500,
        "wires": [
            [
                "4cb28f58.16e3c",
                "62c406c.5889d78",
                "6ea4dbfa.bad86c",
                "12b1df65.dbfa69",
                "be08da6e.0755b8"
            ]
        ]
    },
    {
        "id": "eefdfced.61e168",
        "type": "comment",
        "z": "85d340a4.f1b06",
        "name": "Turbine Simulator Value Generation",
        "info": "",
        "x": 200,
        "y": 440,
        "wires": []
    },
    {
        "id": "34fe4009.8cda8",
        "type": "debug",
        "z": "85d340a4.f1b06",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1110,
        "y": 420,
        "wires": []
    },
    {
        "id": "3006fed7.b635d2",
        "type": "modbus-flex-write",
        "z": "85d340a4.f1b06",
        "name": "",
        "showStatusActivities": true,
        "showErrors": true,
        "server": "10f87254.083c46",
        "x": 902.2840919494629,
        "y": 412.599853515625,
        "wires": [
            [],
            [
                "34fe4009.8cda8"
            ]
        ]
    },
    {
        "id": "f816a438.b74d5",
        "type": "inject",
        "z": "85d340a4.f1b06",
        "name": "",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "x": 137.2333526611328,
        "y": 327.66671419143677,
        "wires": [
            [
                "5b02703e.27d638"
            ]
        ]
    },
    {
        "id": "5b02703e.27d638",
        "type": "function",
        "z": "85d340a4.f1b06",
        "name": "Startup Values",
        "func": "global.set(\"pitch\", 0);\nglobal.set(\"windSpeed\", 0);\nglobal.set(\"counter\", 0);\nglobal.set(\"energy\", 0)\nglobal.set(\"active\", false);\nglobal.set(\"rpm\", 0);\nglobal.set(\"pitchManual\", false);\nglobal.set(\"shutdown\", false);\n\n\nmsg.payload = { value:[false, false, false, false, false], \n'fc': 15, \n'unitid': 1, \n'address': 0, \n'quantity': 4 } \nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 360,
        "y": 340,
        "wires": [
            [
                "3006fed7.b635d2",
                "3fcc69bf.e4bc5e"
            ]
        ]
    },
    {
        "id": "62c406c.5889d78",
        "type": "function",
        "z": "85d340a4.f1b06",
        "name": "windSpeed 1 simulator",
        "func": "//get global variables\nvar windSpeed = global.get(\"windSpeed\");\nvar counter = global.get(\"counter\");\nvar active = global.get(\"active\");\nvar shutdown = global.get(\"shutdown\");\nvar restart = global.get(\"restart\");\n\n//set windspeed based on sin function\nwindSpeed = 10* Math.sin(0.060 *counter) + 50; \n\n//If active is false send default 0 value\nif(active === false){\n    windSpeed = 0;\n} \n\nif(shutdown === true){\n    windSpeed = 0;\n}\n\n//set gloabl variable windspeed\nglobal.set(\"windSpeed\", windSpeed);\n\n//send payload\nmsg.payload = { value: windSpeed, \n    'fc': 6,\n    'unitid': 1, \n    'address': 2,\n    'quantity': 1 } \nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 520,
        "wires": [
            [
                "3006fed7.b635d2"
            ]
        ]
    },
    {
        "id": "6ea4dbfa.bad86c",
        "type": "function",
        "z": "85d340a4.f1b06",
        "name": "pitch 1 simulator",
        "func": "//get global variables\nvar windSpeed = global.get(\"windSpeed\");\nvar windDirection = global.get(\"windDirection\");\nvar pitch = global.get(\"pitch\");\nvar pitchManual = global.get(\"pitchManual\");\nvar active = global.get(\"active\");\nvar shutdown = global.get(\"shutdown\");\nvar restart = global.get(\"restart\");\n\n//generate pitch based on wind Direction and speed\nnewPitch = windDirection + 40 + ( 0.2 * windSpeed); \n\n//set pitch automatically if not done manually by user\nif (pitchManual === false){\n    pitch = newPitch;\n}\n\n//If active is false send default 0 value\nif(active === false){\n    pitch = 0;\n} \n\nif(shutdown === true){\n    pitch = 0;\n}\n\n//send payload\nmsg.payload = { value: pitch, \n    'fc': 6,\n    'unitid': 1, \n    'address': 3,\n    'quantity': 1 } \n    \nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "x": 470,
        "y": 560,
        "wires": [
            [
                "3006fed7.b635d2"
            ]
        ]
    },
    {
        "id": "12b1df65.dbfa69",
        "type": "function",
        "z": "85d340a4.f1b06",
        "name": "energy 1 simulator",
        "func": "//get global variables\nvar pitch = global.get(\"pitch\");\nvar energy = global.get(\"energy\");\nvar active = global.get(\"active\");\nvar shutdown = global.get(\"shutdown\");\nvar restart = global.get(\"restart\");\n\n//generate energy value\nenergy = pitch + 30 ; \n\n\nif(active === false){\n    energy = 0;\n} \n\nif(shutdown === true){\n    energy = 0;\n} \n\n//set energy\nglobal.set(\"energy\", energy);\n\n//send payload\nmsg.payload = { value: energy, \n    'fc': 6,\n    'unitid': 1, \n    'address': 4,\n    'quantity': 1 } \nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "x": 470,
        "y": 600,
        "wires": [
            [
                "3006fed7.b635d2"
            ]
        ]
    },
    {
        "id": "be08da6e.0755b8",
        "type": "function",
        "z": "85d340a4.f1b06",
        "name": "rpm 1 simulator",
        "func": "//get global variables\nvar rpm = global.get(\"rpm\");\nvar pitch = global.get(\"pitch\");\nvar winddirection = global.get(\"windDirection\");\nvar active = global.get(\"active\");\nvar shutdown = global.get(\"shutdown\");\nvar restart = global.get(\"restart\");\n\n//Generate rpm\ndifference = pitch - winddirection ; \nif(difference > Math.abs(360)){\n    rpm = 15;\n} else if(difference > Math.abs(270)){\n    rpm = 16;\n} else if(difference > Math.abs(180)){\n    rpm = 17;\n} else if(difference > Math.abs(90)){\n    rpm = 18;\n} else if(difference > Math.abs(45)){\n    rpm = 19;\n} else{\n    rpm = 20;\n}\n\n//If active is false, set to default value 0\nif(active === false){\n    rpm = 0;\n} \n\nif(shutdown === true){\n    rpm = 0;\n} else {\n    global.set(\"restart\", false);\n}\n\n//check shutdown status\nif(Math.abs(winddirection - pitch) <= 95 && Math.abs(winddirection - pitch) >= 85){\n    rpm = 0;\n    global.set(\"shutdown\", true);\n    shutdown = true;\n}\n\n\n\n//set rpm\nglobal.set(\"rpm\", rpm);\n\n//send payload\nmsg.payload = { value: rpm, \n    'fc': 6,\n    'unitid': 1, \n    'address': 5,\n    'quantity': 1 } \nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 640,
        "wires": [
            [
                "3006fed7.b635d2"
            ]
        ]
    },
    {
        "id": "76e98d39.27c174",
        "type": "comment",
        "z": "85d340a4.f1b06",
        "name": "Wind Turbine 1 - Read Incoming Traffic",
        "info": "",
        "x": 210,
        "y": 260,
        "wires": []
    },
    {
        "id": "ee2b55ac.326588",
        "type": "modbus-read",
        "z": "85d340a4.f1b06",
        "name": "Read Coils",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "unitid": "2",
        "dataType": "Coil",
        "adr": "1",
        "quantity": "6",
        "rate": "1",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "10f87254.083c46",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "x": 140,
        "y": 760,
        "wires": [
            [],
            [
                "1b6d9ad3.a2fcad"
            ]
        ]
    },
    {
        "id": "1b6d9ad3.a2fcad",
        "type": "function",
        "z": "85d340a4.f1b06",
        "name": " Decode array",
        "func": "//Get passed data\npitchSwitch = msg.payload.data[2]\nactive = msg.payload.data[1]\nrestartStatus = msg.payload.data[3]\n\n\n//set pitchManual global variable\nif (pitchSwitch === true){\n    global.set(\"pitchManual\", true);\n} else {\n    global.set(\"pitchManual\", false);\n}\n\n//set active variable\nif (active === true){\n    global.set(\"active\", true);\n} else {\n    global.set(\"active\", false);\n}\n\n//set Restart variable\nif (restartStatus === true){\n    if (global.get(\"shutdown\") === true){\n        //Do not turn windfarm back on\n        //global.set(\"restart\", true);\n        //global.set(\"active\", true);\n    } else{\n        global.set(\"restart\", false);\n    }\n} else {\n    global.set(\"restart\", false);\n}\n\n//set payload for testing\nvar msg1 = {payload:pitchSwitch};\nvar msg2 = {payload:active};\nreturn [ msg1, msg2];\n",
        "outputs": 4,
        "noerr": 0,
        "x": 193.26663208007812,
        "y": 850.6666121482849,
        "wires": [
            [],
            [
                "a097b1ea.9b9418"
            ],
            [],
            [
                "aa0b1bc.43fe1e8"
            ]
        ]
    },
    {
        "id": "59eb77d2.e90018",
        "type": "modbus-read",
        "z": "85d340a4.f1b06",
        "name": "Read Holding Registers",
        "topic": "",
        "showStatusActivities": true,
        "logIOActivities": false,
        "showErrors": true,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "1",
        "quantity": "6",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "10f87254.083c46",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "x": 180,
        "y": 940,
        "wires": [
            [],
            [
                "8db282a7.139628"
            ]
        ]
    },
    {
        "id": "8db282a7.139628",
        "type": "function",
        "z": "85d340a4.f1b06",
        "name": " Decode array",
        "func": "//Read holding register pitch value\npitch = msg.payload.data[5]\n\n//set pitchManual global variable to true\nvar pitchManual = global.get(\"pitchManual\");\n\nif (pitchManual === true){\n    global.set(\"pitch\", pitch);\n}\n\n//sent payload for testing\nvar msg1 = { payload:pitch};\nreturn [ msg1];\n",
        "outputs": 9,
        "noerr": 0,
        "x": 204.78684997558594,
        "y": 1061.7841491699219,
        "wires": [
            [],
            [],
            [],
            [],
            [],
            [
                "aa692c7c.58b378"
            ],
            [],
            [],
            []
        ]
    },
    {
        "id": "aa692c7c.58b378",
        "type": "debug",
        "z": "85d340a4.f1b06",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 490,
        "y": 1000,
        "wires": []
    },
    {
        "id": "85d6dd65.fc59b",
        "type": "function",
        "z": "85d340a4.f1b06",
        "name": "Motor1 Interface node-python",
        "func": "// Prepare arguments for python script\n// Uses Hat 0 Motor 1\n\nvar motorHatNum = 0;\nvar motorNum = 1;\nvar rpm = msg.payload;\n// need to know motor RPM max\nvar maxMotorRPM = 50\nvar motorSpeed = rpm/maxMotorRPM\n\nvar out = (motorHatNum + \" \" + motorNum + \" \" + motorSpeed);\n\nvar msg = {payload:out};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 950,
        "y": 660,
        "wires": [
            [
                "2af61008.f21968"
            ]
        ]
    },
    {
        "id": "2af61008.f21968",
        "type": "exec",
        "z": "85d340a4.f1b06",
        "command": "python3 /home/pi/motorHatControl.py",
        "addpay": true,
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1270,
        "y": 700,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "4a430f1a.aaa518",
        "type": "function",
        "z": "85d340a4.f1b06",
        "name": "LED3 interface node-python",
        "func": "/* Prepare arguments for python script\nTakes 4 arguments\n1- LED Pin allocation on Pi\n2- Number of LEDs in Array\n3- Speed/Delay (lower is faster)\n4- Function (normal, clear, alarm, test)\n*/\nvar pin = 3;\nvar numLED = 8;\nvar delay = 0.1\nvar windSpeed = msg.payload;\nvar func = \"\"\nif (windSpeed <= 0){\n    func = \"clear\"\n} else if (windSpeed > 0 && windSpeed <= 60) {\n    func = \"normal\"\n} else if (windSpeed > 60) {\n    func = \"alarm\"\n} else {\n    func = \"clear\"\n}\n\nvar args = (\n    pin + \" \" + \n    numLED + \" \" + \n    delay + \" \" + \n    func);\n\nvar msg = {payload:args};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 950,
        "y": 600,
        "wires": [
            [
                "1488cf8f.e57ed"
            ]
        ]
    },
    {
        "id": "1488cf8f.e57ed",
        "type": "exec",
        "z": "85d340a4.f1b06",
        "command": "sudo python3 /home/pi/neopixelControlNR.py",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1350,
        "y": 580,
        "wires": [
            [
                "f6d81366.6602b8"
            ],
            [
                "f6d81366.6602b8"
            ],
            [
                "f6d81366.6602b8"
            ]
        ]
    },
    {
        "id": "f6d81366.6602b8",
        "type": "debug",
        "z": "85d340a4.f1b06",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1620,
        "y": 580,
        "wires": []
    },
    {
        "id": "3fcc69bf.e4bc5e",
        "type": "debug",
        "z": "85d340a4.f1b06",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 630,
        "y": 300,
        "wires": []
    },
    {
        "id": "d4cac11d.313c4",
        "type": "comment",
        "z": "85d340a4.f1b06",
        "name": "Wind Turbine 1 - Send Outgoing Traffic",
        "info": "",
        "x": 210,
        "y": 720,
        "wires": []
    },
    {
        "id": "a097b1ea.9b9418",
        "type": "debug",
        "z": "85d340a4.f1b06",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 430,
        "y": 820,
        "wires": []
    },
    {
        "id": "aa0b1bc.43fe1e8",
        "type": "debug",
        "z": "85d340a4.f1b06",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 430,
        "y": 860,
        "wires": []
    },
    {
        "id": "626b3621.3cd578",
        "type": "function",
        "z": "85d340a4.f1b06",
        "name": "windDirection 1 simulator",
        "func": "//get global variables\nvar windDirection2 = global.get(\"windDirection2\");\nvar counter2 = global.get(\"counter2\");\nvar active2 = global.get(\"active2\");\nvar shutdown2 = global.get(\"shutdown2\");\nvar restart2 = global.get(\"restart2\");\n\n//increment counter\ncounter2 += 1\n\n//set counter and windDirection\nglobal.set(\"counter2\",counter2);\n\n//calculate windDirection using sin function\nwindDirection2 = 10* Math.sin(0.06 *counter2) + 24;\n\n//if active is false then send default 0\nif(active2 === false){\n    windDirection2 = 0;\n}\n\nif(shutdown2 === true){\n        windDirection2 = 0;\n}\n\n\nglobal.set(\"windDirection2\", windDirection2);\n\n//send payload\nmsg.payload = { value: windDirection2, \n    'fc': 6,\n    'unitid': 1, \n    'address': 7,\n    'quantity': 1 } \nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "x": 470,
        "y": 1420,
        "wires": [
            [
                "1343661e.ba430a"
            ]
        ]
    },
    {
        "id": "fc47bba4.958ad",
        "type": "inject",
        "z": "85d340a4.f1b06",
        "name": "",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "2",
        "crontab": "",
        "once": true,
        "onceDelay": "3",
        "x": 130,
        "y": 1440,
        "wires": [
            [
                "626b3621.3cd578",
                "7ba36814.a72c4",
                "58a63102.d57b",
                "e4b6631e.9ee778",
                "c320018.8619e8"
            ]
        ]
    },
    {
        "id": "2a7543d6.e0ecfc",
        "type": "comment",
        "z": "85d340a4.f1b06",
        "name": "Turbine Simulator Value Generation",
        "info": "",
        "x": 180,
        "y": 1380,
        "wires": []
    },
    {
        "id": "28788f75.1514b8",
        "type": "debug",
        "z": "85d340a4.f1b06",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1100,
        "y": 1360,
        "wires": []
    },
    {
        "id": "1343661e.ba430a",
        "type": "modbus-flex-write",
        "z": "85d340a4.f1b06",
        "name": "",
        "showStatusActivities": true,
        "showErrors": true,
        "server": "10f87254.083c46",
        "x": 882.2840919494629,
        "y": 1352.599853515625,
        "wires": [
            [],
            [
                "28788f75.1514b8"
            ]
        ]
    },
    {
        "id": "29a30efe.6a0742",
        "type": "inject",
        "z": "85d340a4.f1b06",
        "name": "",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "x": 117.23335266113281,
        "y": 1267.6667141914368,
        "wires": [
            [
                "23634200.0c1656"
            ]
        ]
    },
    {
        "id": "23634200.0c1656",
        "type": "function",
        "z": "85d340a4.f1b06",
        "name": "Startup Values",
        "func": "global.set(\"pitch2\", 0);\nglobal.set(\"windSpeed2\", 0);\nglobal.set(\"WindDirection2\", 0);\nglobal.set(\"counter2\", 0);\nglobal.set(\"energy2\", 0)\nglobal.set(\"active2\", false);\nglobal.set(\"rpm2\", 0);\nglobal.set(\"pitchManual2\", false);\nglobal.set(\"shutdown2\", false);\n\n\nmsg.payload = { value:[false, false, false, false, false], \n'fc': 15, \n'unitid': 1, \n'address': 1, \n'quantity': 4 } \nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 340,
        "y": 1280,
        "wires": [
            [
                "1343661e.ba430a",
                "89fe198a.19593"
            ]
        ]
    },
    {
        "id": "7ba36814.a72c4",
        "type": "function",
        "z": "85d340a4.f1b06",
        "name": "windSpeed 1 simulator",
        "func": "//get global variables\nvar windSpeed2 = global.get(\"windSpeed2\");\nvar counter2 = global.get(\"counter2\");\nvar active2 = global.get(\"active2\");\nvar shutdown2 = global.get(\"shutdown2\");\nvar restart2 = global.get(\"restart2\");\n\n//set windspeed based on sin function\nwindSpeed2 = 10* Math.sin(0.060 *counter2) + 50; \n\n//If active is false send default 0 value\nif(active2 === false){\n    windSpeed2 = 0;\n} \n\nif(shutdown2 === true){\n    windSpeed2 = 0;\n}\n\n//set gloabl variable windspeed\nglobal.set(\"windSpeed2\", windSpeed2);\n\n//send payload\nmsg.payload = { value: windSpeed2, \n    'fc': 6,\n    'unitid': 1, \n    'address': 8,\n    'quantity': 1 } \nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "x": 470,
        "y": 1460,
        "wires": [
            [
                "1343661e.ba430a"
            ]
        ]
    },
    {
        "id": "58a63102.d57b",
        "type": "function",
        "z": "85d340a4.f1b06",
        "name": "pitch 1 simulator",
        "func": "//get global variables\nvar windSpeed2 = global.get(\"windSpeed2\");\nvar windDirection2 = global.get(\"windDirection2\");\nvar pitch2 = global.get(\"pitch2\");\nvar pitchManual2 = global.get(\"pitchManual2\");\nvar active2 = global.get(\"active2\");\nvar shutdown2 = global.get(\"shutdown2\");\nvar restart2 = global.get(\"restart2\");\n\n//generate pitch based on wind Direction and speed\nnewPitch2 = windDirection2 + 40 + ( 0.2 * windSpeed2); \n//newPitch = 30;\n\n//set pitch automatically if not done manually by user\nif (pitchManual2 === false){\n    pitch2 = newPitch2;\n}\n\n//If active is false send default 0 value\nif(active2 === false){\n    pitch2 = 0;\n} \n\nif(shutdown2 === true){\n    pitch2 = 0;\n}\n\nglobal.set(\"pitch2\", pitch2)\n\n//send payload\nmsg.payload = { value: pitch2, \n    'fc': 6,\n    'unitid': 1, \n    'address': 9,\n    'quantity': 1 } \n    \nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "x": 450,
        "y": 1500,
        "wires": [
            [
                "1343661e.ba430a"
            ]
        ]
    },
    {
        "id": "e4b6631e.9ee778",
        "type": "function",
        "z": "85d340a4.f1b06",
        "name": "energy 1 simulator",
        "func": "//get global variables\nvar pitch2 = global.get(\"pitch2\");\nvar energy2 = global.get(\"energy2\");\nvar active2 = global.get(\"active2\");\nvar shutdown2 = global.get(\"shutdown2\");\nvar restart2 = global.get(\"restart2\");\n\n//generate energy value\nenergy2 = pitch2 + 30 ; \n\n\nif(active2 === false){\n    energy2 = 0;\n} \n\nif(shutdown2 === true){\n    energy2 = 0;\n} \n\n//set energy\nglobal.set(\"energy2\", energy2);\n\n//send payload\nmsg.payload = { value: energy2, \n    'fc': 6,\n    'unitid': 1, \n    'address': 10,\n    'quantity': 1 } \nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "x": 450,
        "y": 1540,
        "wires": [
            [
                "1343661e.ba430a"
            ]
        ]
    },
    {
        "id": "c320018.8619e8",
        "type": "function",
        "z": "85d340a4.f1b06",
        "name": "rpm 1 simulator",
        "func": "//get global variables\nvar rpm2 = global.get(\"rpm2\");\nvar pitch2 = global.get(\"pitch2\");\nvar winddirection2 = global.get(\"windDirection2\");\nvar active2 = global.get(\"active2\");\nvar shutdown2 = global.get(\"shutdown2\");\nvar restart2 = global.get(\"restart2\");\n\n//Generate rpm\ndifference2 = pitch2 - winddirection2 ; \nif(difference2 > Math.abs(360)){\n    rpm = 15;\n} else if(difference2 > Math.abs(270)){\n    rpm = 16;\n} else if(difference2 > Math.abs(180)){\n    rpm = 17;\n} else if(difference2 > Math.abs(90)){\n    rpm = 18;\n} else if(difference2 > Math.abs(45)){\n    rpm2 = 19;\n} else{\n    rpm2 = 20;\n}\n\n//If active is false, set to default value 0\nif(active2 === false){\n    rpm2 = 0;\n} \n\nif(shutdown2 === true){\n    rpm2 = 0;\n}\n\n//check shutdown status\nif(Math.abs(winddirection2 - pitch2) <= 95 && Math.abs(winddirection2 - pitch2) >= 85){\n    rpm2 = 0;\n    global.set(\"shutdown2\", true);\n    shutdown2 = true;\n}\n\n\n\n//set rpm\nglobal.set(\"rpm2\", rpm2);\n\n//send payload\nmsg.payload = { value: rpm2, \n    'fc': 6,\n    'unitid': 1, \n    'address': 11,\n    'quantity': 1 } \nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 1580,
        "wires": [
            [
                "1343661e.ba430a"
            ]
        ]
    },
    {
        "id": "771040d6.b00628",
        "type": "comment",
        "z": "85d340a4.f1b06",
        "name": "Wind Turbine 1 - Read Incoming Traffic",
        "info": "",
        "x": 190,
        "y": 1200,
        "wires": []
    },
    {
        "id": "60dc00e7.e4cd8",
        "type": "function",
        "z": "85d340a4.f1b06",
        "name": "Motor1 Interface node-python",
        "func": "// Prepare arguments for python script\n// Uses Hat 0 Motor 1\n\nvar motorHatNum = 0;\nvar motorNum = 1;\nvar rpm = msg.payload;\n// need to know motor RPM max\nvar maxMotorRPM = 50\nvar motorSpeed = rpm/maxMotorRPM\n\nvar out = (motorHatNum + \" \" + motorNum + \" \" + motorSpeed);\n\nvar msg = {payload:out};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 930,
        "y": 1600,
        "wires": [
            [
                "7b48ad5b.f01aac"
            ]
        ]
    },
    {
        "id": "7b48ad5b.f01aac",
        "type": "exec",
        "z": "85d340a4.f1b06",
        "command": "python3 /home/pi/motorHatControl.py",
        "addpay": true,
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1250,
        "y": 1640,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "901c97b4.bfd978",
        "type": "function",
        "z": "85d340a4.f1b06",
        "name": "LED3 interface node-python",
        "func": "/* Prepare arguments for python script\nTakes 4 arguments\n1- LED Pin allocation on Pi\n2- Number of LEDs in Array\n3- Speed/Delay (lower is faster)\n4- Function (normal, clear, alarm, test)\n*/\nvar pin = 3;\nvar numLED = 8;\nvar delay = 0.1\nvar windSpeed = msg.payload;\nvar func = \"\"\nif (windSpeed <= 0){\n    func = \"clear\"\n} else if (windSpeed > 0 && windSpeed <= 60) {\n    func = \"normal\"\n} else if (windSpeed > 60) {\n    func = \"alarm\"\n} else {\n    func = \"clear\"\n}\n\nvar args = (\n    pin + \" \" + \n    numLED + \" \" + \n    delay + \" \" + \n    func);\n\nvar msg = {payload:args};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 930,
        "y": 1540,
        "wires": [
            []
        ]
    },
    {
        "id": "89fe198a.19593",
        "type": "debug",
        "z": "85d340a4.f1b06",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 610,
        "y": 1240,
        "wires": []
    },
    {
        "id": "4fa06585.3764fc",
        "type": "comment",
        "z": "85d340a4.f1b06",
        "name": "Wind Turbine 1 - Send Outgoing Traffic",
        "info": "",
        "x": 190,
        "y": 1660,
        "wires": []
    },
    {
        "id": "7733ee62.adf43",
        "type": "modbus-read",
        "z": "85d340a4.f1b06",
        "name": "Read Coils",
        "topic": "",
        "showStatusActivities": true,
        "logIOActivities": false,
        "showErrors": true,
        "unitid": "2",
        "dataType": "Coil",
        "adr": "1",
        "quantity": "10",
        "rate": "2",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "10f87254.083c46",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "x": 140,
        "y": 1720,
        "wires": [
            [],
            [
                "48d206fe.cf6c4"
            ]
        ]
    },
    {
        "id": "48d206fe.cf6c4",
        "type": "function",
        "z": "85d340a4.f1b06",
        "name": " Decode array",
        "func": "//Get passed data\npitchSwitch = msg.payload.data[6]\nactive = msg.payload.data[5]\nrestartStatus = msg.payload.data[7]\n\n\n//set pitchManual global variable\nif (pitchSwitch === true){\n    global.set(\"pitchManual2\", true);\n} else {\n    global.set(\"pitchManual2\", false);\n}\n\n//set active variable\nif (active === true){\n    global.set(\"active2\", true);\n} else {\n    global.set(\"active2\", false);\n}\n\n//set Restart variable\nif (restartStatus === true){\n    if (global.get(\"shutdown2\") === true){\n        //Do not turn windfarm back on\n        //global.set(\"restart\", true);\n        //global.set(\"active\", true);\n    } else{\n        global.set(\"restart2\", false);\n    }\n} else {\n    global.set(\"restart2\", false);\n}\n\n//set payload for testing\nvar msg1 = {payload:pitchSwitch};\nvar msg2 = {payload:global.get(\"active2\")};\nreturn [ msg1, msg2];\n",
        "outputs": 5,
        "noerr": 0,
        "x": 180,
        "y": 1840,
        "wires": [
            [],
            [
                "64380de9.1ac9a4"
            ],
            [],
            [],
            []
        ]
    },
    {
        "id": "9efde507.5c706",
        "type": "modbus-read",
        "z": "85d340a4.f1b06",
        "name": "Read Holding Registers",
        "topic": "",
        "showStatusActivities": true,
        "logIOActivities": false,
        "showErrors": true,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "1",
        "quantity": "12",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "10f87254.083c46",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "x": 180,
        "y": 1980,
        "wires": [
            [],
            [
                "dc53bd7e.3a47d8"
            ]
        ]
    },
    {
        "id": "dc53bd7e.3a47d8",
        "type": "function",
        "z": "85d340a4.f1b06",
        "name": " Decode array",
        "func": "//Read holding register pitch value\npitch = msg.payload.data[11]\n\n//set pitchManual global variable to true\nvar pitchManual = global.get(\"pitchManual2\");\n\nif (pitchManual === true){\n    global.set(\"pitch2\", pitch);\n}\n\n//sent payload for testing\n//var msg1 = { payload:pitch};\n//return [ msg1];\n",
        "outputs": 9,
        "noerr": 0,
        "x": 200,
        "y": 2080,
        "wires": [
            [],
            [],
            [],
            [],
            [],
            [
                "c1a98f03.9f9e"
            ],
            [],
            [],
            []
        ]
    },
    {
        "id": "c1a98f03.9f9e",
        "type": "debug",
        "z": "85d340a4.f1b06",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 490,
        "y": 1980,
        "wires": []
    },
    {
        "id": "a4073b6a.19e94",
        "type": "debug",
        "z": "85d340a4.f1b06",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 430,
        "y": 1780,
        "wires": []
    },
    {
        "id": "64380de9.1ac9a4",
        "type": "debug",
        "z": "85d340a4.f1b06",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 440,
        "y": 1820,
        "wires": []
    },
    {
        "id": "10f87254.083c46",
        "type": "modbus-client",
        "z": "",
        "name": "server",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "tcpHost": "127.0.0.1",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "unit_id": 1,
        "commandDelay": 1,
        "clientTimeout": 1000,
        "reconnectTimeout": 2000
    }
]
